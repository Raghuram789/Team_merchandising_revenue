class Customer:
    def __init__(self, name):
        self.name = name
        self.purchases = []  # List of (item, price, quantity)

    def add_purchase(self, item, price, quantity):
        self.purchases.append((item, price, quantity))

    def total_spent(self):
        return sum(price * quantity for item, price, quantity in self.purchases)

    def get_purchase_summary(self):
        return [(item, price, quantity, price * quantity) for item, price, quantity in self.purchases]

class MerchandiseManager:
    def __init__(self):
        self.customers = []

    def add_customer(self, name):
        if any(customer.name == name for customer in self.customers):
            print(f"Customer {name} already exists.")
        else:
            customer = Customer(name)
            self.customers.append(customer)
            print(f"Added customer: {name}")

    def view_revenue(self):
        total_revenue = sum(customer.total_spent() for customer in self.customers)
        print(f"Total revenue generated by all customers: ${total_revenue:.2f}\n")

        # Display customer purchases in a simple format
        print(f"{'Customer Name':<20} {'Item':<20} {'Price':<10} {'Quantity':<10} {'Total':<10}")
        print("="*70)

        for customer in self.customers:
            purchases = customer.get_purchase_summary()
            for item, price, quantity, total in purchases:
                print(f"{customer.name:<20} {item:<20} ${price:<9.2f} {quantity:<10} ${total:<9.2f}")

    def delete_customer(self, name):
        for customer in self.customers:
            if customer.name == name:
                self.customers.remove(customer)
                print(f"Deleted customer: {name}")
                return
        print(f"Customer {name} not found.")

    def add_purchase(self, name, item, price, quantity):
        for customer in self.customers:
            if customer.name == name:
                customer.add_purchase(item, price, quantity)
                print(f"Added purchase: {item} - ${price:.2f} x {quantity} for customer: {name}")
                return
        print(f"Customer {name} not found.")

def main():
    manager = MerchandiseManager()

    while True:
        print("\nMenu:")
        print("1. Add Customer")
        print("2. Add Purchase")
        print("3. View Revenue")
        print("4. Delete Customer")
        print("5. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == '1':
            name = input("Enter customer name: ")
            manager.add_customer(name)
        elif choice == '2':
            name = input("Enter customer name: ")
            item = input("Enter merchandise name: ")
            try:
                price = float(input("Enter price of merchandise: "))
                quantity = int(input("Enter quantity: "))
                manager.add_purchase(name, item, price, quantity)
            except ValueError:
                print("Invalid input. Please enter numerical values for price and quantity.")
        elif choice == '3':
            manager.view_revenue()
        elif choice == '4':
            name = input("Enter customer name to delete: ")
            manager.delete_customer(name)
        elif choice == '5':
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
